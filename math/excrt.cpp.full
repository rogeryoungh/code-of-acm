// @description 扩展欧几里得

std::tuple<ll, ll, ll> exgcd(ll a, ll b) {
	if (b == 0) {
		return {1, 0, a};
	} else {
		auto [y, x, g] = exgcd(b, a % b);
		return {x, y - a / b * x, g};
	}
}

ll inv_gcd(ll a, ll p) {
	return (std::get<0>(exgcd(a, p)) % p + p) % p;
}

// @description 扩展中国剩余定理

using i128 = __int128_t;

template<class PAIR>
ll excrt(const vector<PAIR> &am) {
	auto [ans, M] = am[0];
	for (auto [a, m] : am) {
		if (M % m == 0 && ans % m == a)
			continue;
		ll B = (a - ans % m + m) % m;
		auto [x, y, g] = exgcd(M, m);
		if (B % g != 0)
			return -1;
		x = i128(x) * (B / g) % (m / g);
		ans += M * x, M *= m /g;
		ans = (ans + M) % M;
	}
	return ans;
}