// @description 扩展欧几里得

std::tuple<ll, ll, ll> exgcd(ll a, ll b) {
	if (b == 0) {
		return {1, 0, a};
	} else {
		auto [y, x, g] = exgcd(b, a % b);
		return {x, y - a / b * x, g};
	}
}

ll inv_gcd(ll a, ll p) {
	return (std::get<0>(exgcd(a, p)) % p + p) % p;
}

// @description 中国剩余定理

template <class PAIR>
ll crt(const std::vector<PAIR> &am) {
	ll prod = 1, ret = 0;
	for (auto [a, m] : am)
		prod *= m;
	for (auto [a, m] : am) {
		ll u = prod / m, v = inv_gcd(u, m);
		ret = (ret + a * u * v) % prod;
	}
	return ret;
}