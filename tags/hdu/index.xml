<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HDU on Roger Young</title>
    <link>https://rogeryoungh.github.io/code-of-acm/tags/hdu/</link>
    <description>Recent content in HDU on Roger Young</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>© 2021 [Roger Young](/code-of-acm)</copyright>
    <lastBuildDate>Fri, 30 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rogeryoungh.github.io/code-of-acm/tags/hdu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HDU6975 Forgiving Matching</title>
      <link>https://rogeryoungh.github.io/code-of-acm/post/2021-07/hdu6975/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rogeryoungh.github.io/code-of-acm/post/2021-07/hdu6975/</guid>
      <description>题目大意 给定文本串 $S$ 和模式串 $T$，对每个位置进行匹配，得到失配次数。
统计此失配次数，计算前缀和。
分析 我是没料到 HDOJ 没有 M_PI，CE 了几发。
FFT 字符串匹配模板题，我在 ZAFU Wiki 中讲过，即对每个字符卷积。
#include &amp;#34;template/basic/complex.hpp&amp;#34; const int maxn = 1 &amp;lt;&amp;lt; 20; using img = Complex&amp;lt;double&amp;gt;; using poly_t = vector&amp;lt;img&amp;gt;; poly_t w; #include &amp;#34;template/poly-fft/fft_init.hpp&amp;#34;#include &amp;#34;template/poly-fft/fft.hpp&amp;#34; char a[maxn], b[maxn]; int sum[maxn], ans[maxn]; char ch[] = &amp;#34;0123456789*&amp;#34;; int main() { w = fft_init(maxn); int ttt = rr(); while (ttt--) { int n = rr(), m = rr(); fill(sum, sum + m + n + 12, 0); fill(ans, ans + m + 12, 0); int lim = getlim(m, n); scanf(&amp;#34;%s %s&amp;#34;, b, a); int tsum = 0; for (int i = 0; i &amp;lt; m - 1; i++) { tsum += b[i] == &amp;#39;*&amp;#39;; tsum += a[i] == &amp;#39;*&amp;#39;; } tsum += a[m - 1] == &amp;#39;*&amp;#39;; reverse(a, a + m + 1); for (int k = 0; k &amp;lt;= 10; k++) { poly_t SS(lim); for (int i = 0; i &amp;lt; n; i++) SS[i].</description>
    </item>
    
  </channel>
</rss>
